name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  id-token: write

jobs:
  build-binaries:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: claude-cleaner-linux-x64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact: claude-cleaner-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: claude-cleaner-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: claude-cleaner-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: claude-cleaner-windows-x64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Build binary
        run: |
          deno compile --allow-all --target ${{ matrix.target }} --output ${{ matrix.artifact }} src/main.ts

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}*

  publish-jsr:
    name: Publish to JSR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Publish to JSR
        run: deno publish

  create-release:
    name: Create GitHub Release
    needs: [build-binaries, publish-jsr]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}