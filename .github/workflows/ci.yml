name: CI

on:
  pull_request:
    branches: ["*"]
  push:
    branches: [main]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # ratchet:actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # ratchet:denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true
          # setting `cache-hash` implies `cache: true` and replaces the default of `${{ hashFiles('**/deno.lock') }}`
          cache-hash: ${{ hashFiles('**/deno.json', '**/deno.lock') }}

      - name: Setup mise (Windows only)
        if: runner.os == 'Windows'
        uses: jdx/mise-action@v2

      - name: Run tests
        run: deno task test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERBOSE: "true"

  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # ratchet:actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # ratchet:denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true
          # setting `cache-hash` implies `cache: true` and replaces the default of `${{ hashFiles('**/deno.lock') }}`
          cache-hash: ${{ hashFiles('**/deno.json', '**/deno.lock') }}

      - name: Check formatting
        run: deno fmt --check

      - name: Lint code
        run: deno lint

      - name: Type check
        run: deno check src/main.ts
